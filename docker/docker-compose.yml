version: "3"
services:
  
  openldap:
    image: osixia/openldap:stable
    container_name: idsrv4-openldap
    ports:
      - ${LDAP_PORT}:389
    expose:
      - 389

  redis:
    image: redis:latest
    container_name: idsrv4-redis
    volumes:
      - redis_data:/data
    ports:
       - ${REDIS_PORT}:6379
    expose: 
       - 6379

  auth:
    image: idsrv4-auth:latest
    build:
      context: .
      dockerfile: auth.dockerfile
      args:
        env: ${DOCKER_ENV}
    container_name: demo-auth
    # environment:
      # ASPNETCORE_ENVIRONMENT: Docker
      # ASPNETCORE_Kestrel__Certificates__Default__Password:
      # ASPNETCORE_Kestrel__Certificates__Default__Path: "/etc/docker/certs/docker.pfx"
    networks: 
      - default
    ports:
      - ${AUTH_PORT}:6000
      - ${AUTH_HTTPS_PORT}:6001
    volumes:
      # - logs:/App_Data/Logs
      - ../idsrv4/auth/Logs:/App_Data/Logs
    depends_on:
      - openldap
      - redis

  webapi:
    image: idsrv4-backend:latest
    build:
      context: .
      dockerfile: backend.dockerfile
      args:
        env: ${DOCKER_ENV}
    container_name: demo-backend
    # environment:
      # ASPNETCORE_ENVIRONMENT: Docker
      # ASPNETCORE_Kestrel__Certificates__Default__Password:
      # ASPNETCORE_Kestrel__Certificates__Default__Path: "/etc/docker/certs/docker.pfx"
    networks: 
      - default
    ports:
      - ${BACKEND_PORT}:5000
      - ${BACKEND_HTTPS_PORT}:5001
    volumes:
      # - logs:/App_Data/Logs
      - ../idsrv4/webapi/Logs:/App_Data/Logs
    depends_on:
      - openldap
      - redis

networks:
  default:
    driver: bridge

volumes:
  # logs:
  redis_data: